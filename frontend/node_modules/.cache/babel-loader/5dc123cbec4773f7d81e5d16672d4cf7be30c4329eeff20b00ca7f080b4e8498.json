{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to include auth token if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Authentication services\nexport const authService = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n  getCurrentUser: () => {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  }\n};\n\n// User services\nexport const userService = {\n  getUserProfile: () => api.get('/users/profile'),\n  updateUserProfile: userData => api.put('/users/profile', userData)\n};\n\n// Event services\nexport const eventService = {\n  getEvents: () => api.get('/events'),\n  getEventById: id => api.get(`/events/${id}`),\n  createEvent: eventData => api.post('/events', eventData),\n  updateEvent: (id, eventData) => api.put(`/events/${id}`, eventData),\n  deleteEvent: id => api.delete(`/events/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","authService","login","credentials","post","register","userData","logout","removeItem","getCurrentUser","user","JSON","parse","userService","getUserProfile","get","updateUserProfile","put","eventService","getEvents","getEventById","id","createEvent","eventData","updateEvent","deleteEvent","delete"],"sources":["C:/ProjectWeb/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor to include auth token if available\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Authentication services\r\nexport const authService = {\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  },\r\n  getCurrentUser: () => {\r\n    const user = localStorage.getItem('user');\r\n    return user ? JSON.parse(user) : null;\r\n  },\r\n};\r\n\r\n// User services\r\nexport const userService = {\r\n  getUserProfile: () => api.get('/users/profile'),\r\n  updateUserProfile: (userData) => api.put('/users/profile', userData),\r\n};\r\n\r\n// Event services\r\nexport const eventService = {\r\n  getEvents: () => api.get('/events'),\r\n  getEventById: (id) => api.get(`/events/${id}`),\r\n  createEvent: (eventData) => api.post('/events', eventData),\r\n  updateEvent: (id, eventData) => api.put(`/events/${id}`, eventData),\r\n  deleteEvent: (id) => api.delete(`/events/${id}`),\r\n};\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACAI,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMG,WAAW,GAAG;EACzBC,KAAK,EAAGC,WAAW,IAAKhB,GAAG,CAACiB,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;EAC5DE,QAAQ,EAAGC,QAAQ,IAAKnB,GAAG,CAACiB,IAAI,CAAC,gBAAgB,EAAEE,QAAQ,CAAC;EAC5DC,MAAM,EAAEA,CAAA,KAAM;IACZX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;IAChCZ,YAAY,CAACY,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EACDC,cAAc,EAAEA,CAAA,KAAM;IACpB,MAAMC,IAAI,GAAGd,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,OAAOa,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC,GAAG,IAAI;EACvC;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,WAAW,GAAG;EACzBC,cAAc,EAAEA,CAAA,KAAM3B,GAAG,CAAC4B,GAAG,CAAC,gBAAgB,CAAC;EAC/CC,iBAAiB,EAAGV,QAAQ,IAAKnB,GAAG,CAAC8B,GAAG,CAAC,gBAAgB,EAAEX,QAAQ;AACrE,CAAC;;AAED;AACA,OAAO,MAAMY,YAAY,GAAG;EAC1BC,SAAS,EAAEA,CAAA,KAAMhC,GAAG,CAAC4B,GAAG,CAAC,SAAS,CAAC;EACnCK,YAAY,EAAGC,EAAE,IAAKlC,GAAG,CAAC4B,GAAG,CAAC,WAAWM,EAAE,EAAE,CAAC;EAC9CC,WAAW,EAAGC,SAAS,IAAKpC,GAAG,CAACiB,IAAI,CAAC,SAAS,EAAEmB,SAAS,CAAC;EAC1DC,WAAW,EAAEA,CAACH,EAAE,EAAEE,SAAS,KAAKpC,GAAG,CAAC8B,GAAG,CAAC,WAAWI,EAAE,EAAE,EAAEE,SAAS,CAAC;EACnEE,WAAW,EAAGJ,EAAE,IAAKlC,GAAG,CAACuC,MAAM,CAAC,WAAWL,EAAE,EAAE;AACjD,CAAC;AAED,eAAelC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}